// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Session {
  id        String   @id
  sid       String   @unique
  data      String
  expiresAt DateTime
}

model User {
  id        String   @id @default(uuid())
  firstname String
  lastname  String
  username  String   @unique
  password  String
  files     File[]
  folders   Folder[]
}

model File {
  id        String   @id @default(uuid())
  name      String
  url       String
  createdAt DateTime @default(now())
  sizeKB    Int
  owner     User     @relation(fields: [ownerId], references: [id], onDelete: Cascade)
  ownerId   String
  folder    Folder   @relation(fields: [folderId], references: [id], onDelete: Cascade)
  folderId  String

  @@unique([url, name, ownerId])
}

model Folder {
  id        String   @id @default(uuid())
  name      String
  url       String
  createdAt DateTime @default(now())
  owner     User     @relation(fields: [ownerId], references: [id], onDelete: Cascade)
  ownerId   String
  files     File[]
  folders   Folder[] @relation("folder relation")
  parent    Folder?  @relation("folder relation", fields: [parentId], references: [id], onDelete: Cascade)
  parentId  String?

  @@unique([url, name, ownerId])
}
